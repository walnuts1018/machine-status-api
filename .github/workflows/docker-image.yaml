name: Build Docker Image
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  start-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Slack notification of build start
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions
          SLACK_COLOR: "#4381de"
          SLACK_ICON: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          SLACK_TITLE: Start Machine Status API image build 
          SLACK_MESSAGE: |
            Run number : #${{ github.run_number }}

  build-images:
    name: Build Machine Status API Custom Docker Image
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
        include: 
          - arch: "amd64"
            runs-on: ubuntu-latest
            platform: linux/amd64
          - arch: "arm64"
            runs-on: macos-14
            platform: linux/arm64
    runs-on: ${{ matrix.runs-on }}
    outputs:
      imageTag: ${{ env.ImageTag }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache brew
        if: runner.os == 'macos'
        uses: actions/cache@v4
        with:
          path: /Users/runner/Library/Caches/Homebrew
          key: ${{ runner.os }}-brew
          restore-keys: |
            ${{ runner.os }}-brew

      - name: install docker
        if: runner.os == 'macos'
        run: |
          brew install docker colima
          colima start --arch x86_64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: walnuts1018
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      
      - name: Tag
        if: github.event_name == 'release'
        run: echo "ImageTag=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Tag
        if: github.event_name != 'release'
        run: echo "ImageTag=test-${{ github.sha }}-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/walnuts1018/machine-status-api:${{ env.ImageTag }}-${{ matrix.arch }}

  merge-images:
    name: Merge docker images
    runs-on: ubuntu-latest
    needs: [build-images]
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: walnuts1018
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Merge Docker images
        run: |
          docker buildx imagetools create --tag ghcr.io/walnuts1018/machine-status-api:latest --tag:ghcr.io/walnuts1018/machine-status-api:${{ needs.build-images.outputs.imageTag }} ghcr.io/walnuts1018/machine-status-api:${{ needs.build-images.outputs.imageTag }}-amd64 ghcr.io/walnuts1018/machine-status-api:${{ needs.build-images.outputs.imageTag }}-arm64


  SucceessNotification:
    if: ${{ success() }}
    name: Send Success Message
    needs: [merge-images]
    runs-on: ubuntu-latest
    steps:
      - name: Send Message to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions
          SLACK_ICON: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          SLACK_TITLE: Machine Status API image build succeeded
          SLACK_MESSAGE: |
            Image: Machine Status API
            Run number : #${{ github.run_number }}
           
  FailureAlert:
    if: ${{ failure() }}
    name: Notify failure
    needs: [merge-images]
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Alert to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions
          SLACK_ICON: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          SLACK_TITLE: Machine Status API image build failed
          SLACK_COLOR: danger
          SLACK_MESSAGE: |
            Image: Machine Status API
            Run number : #${{ github.run_number }}
