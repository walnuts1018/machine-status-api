openapi: 3.0.0
info:
  title: Machine Status API
  version: '1.0'
  contact: {}
  description: Manage physical and virtual machines in a unified manner.
servers:
  - url: 'http://192.168.0.129/v1'
paths:
  '/machines/start/{machineName}':
    parameters:
      - schema:
          type: string
        name: machineName
        in: path
        required: true
        description: Machine Name
    post:
      summary: Start Machine
      operationId: start-machine
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Machine 'machine1' not found"
  '/machines/start/{machineName}/automated':
    parameters:
      - schema:
          type: string
        name: machineName
        in: path
        required: true
        description: Machine Name
    post:
      summary: Start Machine in Automated Action
      operationId: start-machine-automated
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Machine 'machine1' not found"
  '/machines/stop/{machineName}':
    parameters:
      - schema:
          type: string
        name: machineName
        in: path
        required: true
        description: Machine Name
    post:
      summary: Stop Machine
      operationId: stop-machine
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Machine 'machine1' not found"
  '/machines/stop/{machineName}/automated':
    parameters:
      - schema:
          type: string
        name: machineName
        in: path
        required: true
        description: Machine Name
    post:
      summary: Stop Machine in Automated Action
      operationId: stop-machine-automated
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Machine 'machine1' not found"
  '/machines/status/{machineName}':
    parameters:
      - schema:
          type: string
        name: machineName
        in: path
        required: true
        description: Machine ID
    get:
      summary: Get Machine Status
      operationId: get-machine-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Machine 'machine1' not found"
  '/tasks/{taskId}':
    parameters:
      - schema:
          type: integer
        name: taskId
        in: path
        required: true
        description: Task ID
    get:
      summary: Get Task Status
      operationId: get-task-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Task '077a1684-d51b-483e-9c78-258ca9aae222' not found"
components:
  schemas:
    Machine:
      title: Machine
      type: object
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/MachineStatus'
    Task:
      title: Task
      type: object
      properties:
        id:
          type: string
        status:
          enum:
            - Unknown
            - Inprogress
            - Succeeded
            - Failed
          readOnly: true
        registered_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
    MachineStatus:
      title: MachineStatus
      enum:
        - Unknown
        - Inactive
        - Unhealthy
        - Healthy
      readOnly: true
